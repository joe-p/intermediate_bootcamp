#pragma version 8
intcblock 0 1 36
bytecblock 0x 0x702d 0x77696e6e696e675f70726f706f73616c5f766f746573 0x762d 0x77696e6e696e675f70726f706f73616c 0x682d
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x373b154d // "add_proposal((string,byte[32],string,string,address),uint64,pay)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x6310549b // "support(address,uint64)void"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x50bb5704 // "mint_nft((address,uint64))void"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub mintnft_3
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 3
txna ApplicationArgs 2
btoi
store 4
load 3
load 4
callsub support_2
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
btoi
store 1
txn GroupIndex
intc_1 // 1
-
store 2
load 2
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
load 1
load 2
callsub addproposal_1
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec 4 // "winning_proposal"
bytec_0 // ""
app_global_put
bytec_2 // "winning_proposal_votes"
intc_0 // 0
app_global_put
retsub

// add_proposal
addproposal_1:
proto 3 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn Sender
frame_bury 1
frame_dig 1
len
pushint 32 // 32
==
assert
frame_dig 1
frame_dig -2
itob
concat
frame_bury 0
bytec_1 // "p-"
frame_dig 0
concat
box_len
store 6
store 5
load 6
intc_0 // 0
==
assert
bytec_1 // "p-"
frame_dig 0
concat
box_del
pop
bytec_1 // "p-"
frame_dig 0
concat
frame_dig -3
box_put
retsub

// support
support_2:
proto 2 0
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -2
frame_dig -1
itob
concat
frame_bury 3
bytec_1 // "p-"
txn Sender
concat
box_len
store 8
store 7
load 8
intc_0 // 0
==
assert
bytec_3 // "v-"
frame_dig 3
concat
box_get
store 10
store 9
load 10
assert
load 9
btoi
frame_bury 1
frame_dig 1
intc_1 // 1
+
frame_bury 0
bytec_3 // "v-"
frame_dig 3
concat
box_del
pop
bytec_3 // "v-"
frame_dig 3
concat
frame_dig 0
itob
box_put
frame_dig 0
bytec_2 // "winning_proposal_votes"
app_global_get
>
bz support_2_l2
bytec_2 // "winning_proposal_votes"
frame_dig 0
app_global_put
bytec 4 // "winning_proposal"
frame_dig 3
app_global_put
support_2_l2:
intc_1 // 1
frame_bury 2
bytec 5 // "h-"
txn Sender
concat
box_del
pop
bytec 5 // "h-"
txn Sender
concat
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 2
setbit
box_put
retsub

// mint_nft
mintnft_3:
proto 1 0
bytec_0 // ""
dupn 5
bytec_1 // "p-"
frame_dig -1
concat
box_get
store 12
store 11
load 12
assert
load 11
frame_bury 0
frame_dig 0
frame_dig 0
pushint 34 // 34
extract_uint16
frame_dig 0
intc_2 // 36
extract_uint16
substring3
frame_bury 1
frame_dig 0
frame_dig 0
intc_2 // 36
extract_uint16
dig 1
len
substring3
frame_bury 2
frame_dig 0
extract 38 32
frame_bury 3
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig 1
extract 2 0
itxn_field ConfigAssetName
frame_dig 2
extract 2 0
itxn_field ConfigAssetUnitName
frame_dig 3
itxn_field ConfigAssetReserve
frame_dig 4
extract 2 0
itxn_field ConfigAssetURL
frame_dig 5
itxn_field ConfigAssetMetadataHash
intc_0 // 0
itxn_field Fee
itxn_submit
retsub