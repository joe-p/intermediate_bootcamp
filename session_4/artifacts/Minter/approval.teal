#pragma version 8
intcblock 0 1 34 36
txn NumAppArgs
intc_0 // 0
==
bnz main_l4
txna ApplicationArgs 0
pushbytes 0x7c0e3c89 // "mint_nft((string,byte[32],string,string,address))uint64"
==
bnz main_l3
err
main_l3:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub mintnft_0
store 0
pushbytes 0x151f7c75 // 0x151f7c75
load 0
itob
concat
log
intc_1 // 1
return
main_l4:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l6
err
main_l6:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// mint_nft
mintnft_0:
proto 1 1
intc_0 // 0
pushbytes 0x // ""
dupn 5
frame_dig -1
frame_dig -1
intc_2 // 34
extract_uint16
frame_dig -1
intc_3 // 36
extract_uint16
substring3
frame_bury 1
frame_dig -1
frame_dig -1
intc_3 // 36
extract_uint16
dig 1
len
substring3
frame_bury 2
frame_dig -1
extract 38 32
frame_bury 3
frame_dig -1
frame_dig -1
intc_0 // 0
extract_uint16
frame_dig -1
intc_2 // 34
extract_uint16
substring3
frame_bury 4
frame_dig -1
extract 2 32
frame_bury 5
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig 1
extract 2 0
itxn_field ConfigAssetName
frame_dig 2
extract 2 0
itxn_field ConfigAssetUnitName
frame_dig 3
itxn_field ConfigAssetReserve
frame_dig 4
extract 2 0
itxn_field ConfigAssetURL
frame_dig 5
itxn_field ConfigAssetMetadataHash
intc_0 // 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
frame_bury 0
retsub