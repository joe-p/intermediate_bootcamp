{
    "hints": {
        "add_proposal((string,byte[32],string,string,address),uint64,pay)void": {
            "structs": {
                "proposal": {
                    "name": "NFTProposal",
                    "elements": [
                        [
                            "url",
                            "string"
                        ],
                        [
                            "metadata_hash",
                            "byte[32]"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "unit_name",
                            "string"
                        ],
                        [
                            "reserve",
                            "address"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "vote(address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "mint(application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4IDB4NzYyZCAweDcwMmQgMHg3NzY5NmU2ZTY5NmU2NzVmNzA3MjZmNzA2ZjczNjE2YyAweDc3Njk2ZTZlNjk2ZTY3NWY3MDcyNmY3MDZmNzM2MTZjNWY3NjZmNzQ2NTczIDB4NjgyZAp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDM3M2IxNTRkIC8vICJhZGRfcHJvcG9zYWwoKHN0cmluZyxieXRlWzMyXSxzdHJpbmcsc3RyaW5nLGFkZHJlc3MpLHVpbnQ2NCxwYXkpdm9pZCIKPT0KYm56IG1haW5fbDcKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg4ODY2ZjBiNyAvLyAidm90ZShhZGRyZXNzLHVpbnQ2NCl2b2lkIgo9PQpibnogbWFpbl9sNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGI3ZWFlNGY4IC8vICJtaW50KGFwcGxpY2F0aW9uKXZvaWQiCj09CmJueiBtYWluX2w1CmVycgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKY2FsbHN1YiBtaW50XzMKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDY6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKc3RvcmUgMwp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKc3RvcmUgNApsb2FkIDMKbG9hZCA0CmNhbGxzdWIgdm90ZV8yCmludGNfMSAvLyAxCnJldHVybgptYWluX2w3Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpidG9pCnN0b3JlIDEKdHhuIEdyb3VwSW5kZXgKaW50Y18xIC8vIDEKLQpzdG9yZSAyCmxvYWQgMgpndHhucyBUeXBlRW51bQppbnRjXzEgLy8gcGF5Cj09CmFzc2VydApsb2FkIDAKbG9hZCAxCmxvYWQgMgpjYWxsc3ViIGFkZHByb3Bvc2FsXzEKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDg6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KYm56IG1haW5fbDEwCmVycgptYWluX2wxMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjcmVhdGUKY3JlYXRlXzA6CnByb3RvIDAgMApieXRlY18zIC8vICJ3aW5uaW5nX3Byb3Bvc2FsIgpieXRlY18wIC8vICIiCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDQgLy8gIndpbm5pbmdfcHJvcG9zYWxfdm90ZXMiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gYWRkX3Byb3Bvc2FsCmFkZHByb3Bvc2FsXzE6CnByb3RvIDMgMApieXRlY18wIC8vICIiCmR1cAppbnRjXzAgLy8gMApkdXAKYnl0ZWNfMCAvLyAiIgpkdXAKZnJhbWVfZGlnIC0xCmd0eG5zIFJlY2VpdmVyCmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCj09CmFzc2VydApnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwphY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKc3RvcmUgNgpzdG9yZSA1CnR4biBTZW5kZXIKZnJhbWVfYnVyeSAxCmZyYW1lX2RpZyAxCmxlbgpwdXNoaW50IDMyIC8vIDMyCj09CmFzc2VydApmcmFtZV9kaWcgMQpmcmFtZV9kaWcgLTIKaXRvYgpjb25jYXQKZnJhbWVfYnVyeSAwCmJ5dGVjXzIgLy8gInAtIgpmcmFtZV9kaWcgMApjb25jYXQKYm94X2xlbgpzdG9yZSA4CnN0b3JlIDcKbG9hZCA4CmludGNfMCAvLyAwCj09CmFzc2VydApieXRlY18yIC8vICJwLSIKZnJhbWVfZGlnIDAKY29uY2F0CmJveF9kZWwKcG9wCmJ5dGVjXzIgLy8gInAtIgpmcmFtZV9kaWcgMApjb25jYXQKZnJhbWVfZGlnIC0zCmJveF9wdXQKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCnN0b3JlIDEwCnN0b3JlIDkKZnJhbWVfZGlnIC0xCmd0eG5zIEFtb3VudApsb2FkIDkKbG9hZCA1Ci0KPj0KYXNzZXJ0CnJldHN1YgoKLy8gdm90ZQp2b3RlXzI6CnByb3RvIDIgMAppbnRjXzAgLy8gMApkdXBuIDMKYnl0ZWNfMCAvLyAiIgppbnRjXzAgLy8gMApkdXAKYnl0ZWNfMCAvLyAiIgpkdXAKaW50Y18wIC8vIDAKZnJhbWVfYnVyeSAzCmZyYW1lX2RpZyAtMgpmcmFtZV9kaWcgLTEKaXRvYgpjb25jYXQKZnJhbWVfYnVyeSA0CmJ5dGVjIDUgLy8gImgtIgp0eG4gU2VuZGVyCmNvbmNhdApib3hfbGVuCnN0b3JlIDEyCnN0b3JlIDExCmxvYWQgMTIKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmJ5dGVjXzEgLy8gInYtIgpmcmFtZV9kaWcgNApjb25jYXQKYm94X2xlbgpzdG9yZSAxNApzdG9yZSAxMwpsb2FkIDE0CmludGNfMCAvLyAwCj09CmJueiB2b3RlXzJfbDMKdm90ZV8yX2wxOgpieXRlY18xIC8vICJ2LSIKZnJhbWVfZGlnIDQKY29uY2F0CmJveF9nZXQKc3RvcmUgMTYKc3RvcmUgMTUKbG9hZCAxNgphc3NlcnQKbG9hZCAxNQpidG9pCmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgMQppbnRjXzEgLy8gMQorCmZyYW1lX2J1cnkgMApieXRlY18xIC8vICJ2LSIKZnJhbWVfZGlnIDQKY29uY2F0CmJveF9kZWwKcG9wCmJ5dGVjXzEgLy8gInYtIgpmcmFtZV9kaWcgNApjb25jYXQKZnJhbWVfZGlnIDAKaXRvYgpib3hfcHV0CmZyYW1lX2RpZyAwCmJ5dGVjIDQgLy8gIndpbm5pbmdfcHJvcG9zYWxfdm90ZXMiCmFwcF9nbG9iYWxfZ2V0Cj4KYnogdm90ZV8yX2w0CmJ5dGVjIDQgLy8gIndpbm5pbmdfcHJvcG9zYWxfdm90ZXMiCmZyYW1lX2RpZyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gIndpbm5pbmdfcHJvcG9zYWwiCmZyYW1lX2RpZyA0CmFwcF9nbG9iYWxfcHV0CmIgdm90ZV8yX2w0CnZvdGVfMl9sMzoKYnl0ZWNfMSAvLyAidi0iCmZyYW1lX2RpZyA0CmNvbmNhdApib3hfZGVsCnBvcApieXRlY18xIC8vICJ2LSIKZnJhbWVfZGlnIDQKY29uY2F0CmZyYW1lX2RpZyAzCml0b2IKYm94X3B1dApiIHZvdGVfMl9sMQp2b3RlXzJfbDQ6CmludGNfMSAvLyAxCmZyYW1lX2J1cnkgMgpieXRlYyA1IC8vICJoLSIKdHhuIFNlbmRlcgpjb25jYXQKYm94X2RlbApwb3AKYnl0ZWMgNSAvLyAiaC0iCnR4biBTZW5kZXIKY29uY2F0CnB1c2hieXRlcyAweDAwIC8vIDB4MDAKaW50Y18wIC8vIDAKZnJhbWVfZGlnIDIKc2V0Yml0CmJveF9wdXQKcmV0c3ViCgovLyBtaW50Cm1pbnRfMzoKcHJvdG8gMSAwCmJ5dGVjXzAgLy8gIiIKZHVwbiAyCmJ5dGVjXzMgLy8gIndpbm5pbmdfcHJvcG9zYWwiCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2J1cnkgMApieXRlY18yIC8vICJwLSIKZnJhbWVfZGlnIDAKY29uY2F0CmJveF9nZXQKc3RvcmUgMTgKc3RvcmUgMTcKbG9hZCAxOAphc3NlcnQKbG9hZCAxNwpmcmFtZV9idXJ5IDEKaXR4bl9iZWdpbgpwdXNoaW50IDYgLy8gYXBwbAppdHhuX2ZpZWxkIFR5cGVFbnVtCnB1c2hpbnQgVE1QTF9NSU5URVJfQVBQIC8vIFRNUExfTUlOVEVSX0FQUAppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uSUQKcHVzaGJ5dGVzIDB4YWFjOGViYjggLy8gIm1pbnRfbmZ0KChzdHJpbmcsYnl0ZVszMl0sc3RyaW5nLHN0cmluZyxhZGRyZXNzKSl2b2lkIgppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwpmcmFtZV9kaWcgMQppdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwppdHhuX3N1Ym1pdApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "winning_proposal": {
                    "type": "bytes",
                    "key": "winning_proposal",
                    "descr": ""
                },
                "winning_proposal_votes": {
                    "type": "uint64",
                    "key": "winning_proposal_votes",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "DAO",
        "methods": [
            {
                "name": "add_proposal",
                "args": [
                    {
                        "type": "(string,byte[32],string,string,address)",
                        "name": "proposal"
                    },
                    {
                        "type": "uint64",
                        "name": "proposal_id"
                    },
                    {
                        "type": "pay",
                        "name": "mbr_payment"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "vote",
                "args": [
                    {
                        "type": "address",
                        "name": "proposer"
                    },
                    {
                        "type": "uint64",
                        "name": "proposal_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "mint",
                "args": [
                    {
                        "type": "application",
                        "name": "minter_app"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}