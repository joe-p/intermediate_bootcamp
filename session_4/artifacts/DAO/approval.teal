#pragma version 8
intcblock 0 1
bytecblock 0x 0x762d 0x702d 0x77696e6e696e675f70726f706f73616c 0x77696e6e696e675f70726f706f73616c5f766f746573
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x373b154d // "add_proposal((string,byte[32],string,string,address),uint64,pay)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x8866f0b7 // "vote(address,uint64)void"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x94c61284 // "mint(application)uint64"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub mint_3
store 5
pushbytes 0x151f7c75 // 0x151f7c75
load 5
itob
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 3
txna ApplicationArgs 2
btoi
store 4
load 3
load 4
callsub vote_2
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
btoi
store 1
txn GroupIndex
intc_1 // 1
-
store 2
load 2
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
load 1
load 2
callsub addproposal_1
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_3 // "winning_proposal"
bytec_0 // ""
app_global_put
bytec 4 // "winning_proposal_votes"
intc_0 // 0
app_global_put
retsub

// add_proposal
addproposal_1:
proto 3 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
global CurrentApplicationAddress
acct_params_get AcctMinBalance
store 7
store 6
txn Sender
frame_bury 1
frame_dig 1
len
pushint 32 // 32
==
assert
frame_dig 1
frame_dig -2
itob
concat
frame_bury 0
bytec_2 // "p-"
frame_dig 0
concat
box_len
store 9
store 8
load 9
intc_0 // 0
==
assert
bytec_2 // "p-"
frame_dig 0
concat
box_del
pop
bytec_2 // "p-"
frame_dig 0
concat
frame_dig -3
box_put
global CurrentApplicationAddress
acct_params_get AcctMinBalance
store 11
store 10
frame_dig -1
gtxns Amount
load 10
load 6
-
>=
assert
retsub

// vote
vote_2:
proto 2 0
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
frame_bury 3
frame_dig -2
frame_dig -1
itob
concat
frame_bury 4
txn Sender
box_len
store 13
store 12
load 13
intc_0 // 0
==
assert
bytec_1 // "v-"
frame_dig 4
concat
box_len
store 15
store 14
load 15
intc_0 // 0
==
bnz vote_2_l3
vote_2_l1:
bytec_1 // "v-"
frame_dig 4
concat
box_get
store 17
store 16
load 17
assert
load 16
btoi
frame_bury 1
frame_dig 1
intc_1 // 1
+
frame_bury 0
bytec_1 // "v-"
frame_dig 4
concat
box_del
pop
bytec_1 // "v-"
frame_dig 4
concat
frame_dig 0
itob
box_put
frame_dig 0
bytec 4 // "winning_proposal_votes"
app_global_get
>
bz vote_2_l4
bytec 4 // "winning_proposal_votes"
frame_dig 0
app_global_put
bytec_3 // "winning_proposal"
frame_dig 4
app_global_put
b vote_2_l4
vote_2_l3:
bytec_1 // "v-"
frame_dig 4
concat
box_del
pop
bytec_1 // "v-"
frame_dig 4
concat
frame_dig 3
itob
box_put
b vote_2_l1
vote_2_l4:
intc_1 // 1
frame_bury 2
txn Sender
box_del
pop
txn Sender
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 2
setbit
box_put
retsub

// mint
mint_3:
proto 1 1
intc_0 // 0
bytec_0 // ""
dupn 2
bytec_3 // "winning_proposal"
app_global_get
frame_bury 1
bytec_2 // "p-"
frame_dig 1
concat
box_get
store 19
store 18
load 19
assert
load 18
frame_bury 2
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
pushint TMPL_MINTER_APP // TMPL_MINTER_APP
itxn_field ApplicationID
pushbytes 0x7c0e3c89 // "mint_nft((string,byte[32],string,string,address))uint64"
itxn_field ApplicationArgs
frame_dig 2
itxn_field ApplicationArgs
itxn_submit
itxn LastLog
extract 4 0
btoi
frame_bury 0
retsub